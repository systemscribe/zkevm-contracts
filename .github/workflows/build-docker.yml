# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build-Docker image

on:
  pull_request:
    types:
      - closed
      - labeled
jobs:
  build-and-push:
    if: ${{ github.event.label.name == 'CI:TriggerBuild' }}
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: setup
        run: |
          eval "$(ssh-agent -s)"
          ssh-add /tmp/ssh-key
          npm i
          sudo curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker
        run: npm run docker:contracts
      - name: Push docker image
        run: npm run push:docker:contracts
      # Steps to push multi-platform image, it relies on the previous step:
      #  npm run docker:contracts
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/geth-zkevm-contracts:latest
          file: docker/Dockerfile.geth
          context: .
  trigger-actions:
    runs-on: self-hosted
    needs: build-and-push
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: '${{ secrets.DOCKERHUB_USERNAME }}',
              repo: 'zkevm-node',
              workflow_id: 'provision.yml',
              ref: 'main'
            })
